@model todo.Models.Item
<h2>Respond to an Enquiry</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @{
            string targetlanguage = Request["languages"];
            string response = Request["Reply"];
            if (IsPost)
            {

                string lang = new todo.Controllers.ItemController().DetectLanguage(Model.Enquiry);
                string translatedtext = new todo.Controllers.ItemController().Translate(Model.Enquiry, lang, targetlanguage);
                string translatedSubjecttext = new todo.Controllers.ItemController().Translate(Model.Subject, lang, targetlanguage);
                string responselang = new todo.Controllers.ItemController().DetectLanguage(response);
                string translatedResponsetext = new todo.Controllers.ItemController().Translate(response, responselang, lang);
        <form method="post" action="">
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Enquiry, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Enquiry, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Enquiry, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.languages, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("languages", new SelectList(new Dictionary<string, string> { { "es", "Spanish" }, { "fr", "French" }, { "de", "German" }, { "en", "English" } }, "Key", "Value", targetlanguage))
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TargetSubjectText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input name="TargetSubjectText" class="form-control" value="@translatedSubjecttext"/><br />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TargetText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <textarea name="TargetText" class="form-control">@translatedtext</textarea><br />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Reply, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" name="Reply" class="form-control" value="@translatedResponsetext" /><br />

                </div>
            </div>

            @*<div class="form-group">
            @Html.LabelFor(model => model.Dummy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="submit" value="translate reply to customer language" class="submit" />

            </div>
        </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @*<input type="submit" value="Save" class="btn btn-default" />*@
                    <button type="submit" formaction='@Url.Action("Reply", "Item", Model)'>Submit Reply</button>
                </div>
            </div>
        </form>
            }
            else
            { <form method="post" action="">
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Enquiry, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Enquiry, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Enquiry, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.languages, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("languages", new SelectList(new Dictionary<string, string> { { "es", "Spanish" }, { "fr", "French" }, { "de", "German" }, { "en", "English" } }, "Key", "Value", targetlanguage))
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Dummy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="submit" value="translate enquiry" class="submit" />
        </div>
    </div>



    @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>*@
</form>
            }

        }
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
